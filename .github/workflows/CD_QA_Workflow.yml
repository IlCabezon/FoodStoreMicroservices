# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy on QA

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
   
jobs:
  deploy_on_qa:

    runs_on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Create Product Env file
        working-directory: ./products
        run: |
          touch .env
          echo "" >> .env
          echo APP_SECRET='jg_youtube_tutorial' >> .env
          echo MONGODB_URI='mongodb://nosql-db:27017/product' >> .env
          echo MESSAGE_BROKER_URL='amqps://iktpboie:ueOaNxoZ3hQmHKIlur8p8x22NbRtErdV@jackal.rmq.cloudamqp.com/iktpboie' >> .env
          echo PORT=8002 >> .env
          cat .env

      - name: Create Customer Env file
        working-directory: ./customer
        run: |
          touch .env
          echo "" >> .env
          echo APP_SECRET='jg_youtube_tutorial' >> .env
          echo MONGODB_URI='mongodb://nosql-db:27017/customer' >> .env
          echo MESSAGE_BROKER_URL='amqps://iktpboie:ueOaNxoZ3hQmHKIlur8p8x22NbRtErdV@jackal.rmq.cloudamqp.com/iktpboie' >> .env
          echo PORT=8001 >> .env
          cat .env

      - name: Create Shopping Env file
        working-directory: ./shopping
        run: |
          touch .env
          echo "" >> .env
          echo APP_SECRET='jg_youtube_tutorial' >> .env
          echo MONGODB_URI='mongodb://nosql-db:27017/shopping' >> .env
          echo MESSAGE_BROKER_URL='amqps://iktpboie:ueOaNxoZ3hQmHKIlur8p8x22NbRtErdV@jackal.rmq.cloudamqp.com/iktpboie' >> .env
          echo PORT=8003 >> .env
          cat .env

      - name: Generate Deployment package
        run: |
          zip -r deploy.zip . -x '*.git'

#      - name: Deploy on Elastic beanstalk QA Env
#        usages: einaregilsson/beanstalk-deploy@v20
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#          aws_secret_ley: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          application_name: "ci-cd-testing"
#          environment_name: "Ci-cd-testing-env"
#          version_label: "ver-${{ github.sha }}"
#          region: us-east-2
#          deployment_package: deploy.zip
